{"version":3,"sources":["index.js"],"names":["marked","setOptions","breaks","Marked_Previewer","props","_this","Object","C_Users_jkrishnamurthy_markdown_previewer_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_jkrishnamurthy_markdown_previewer_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_jkrishnamurthy_markdown_previewer_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","rawMarkupText","placeholder","markedPreviewer","rawMarkup","transformMarkdown","bind","C_Users_jkrishnamurthy_markdown_previewer_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","event","target","value","sanitize","setState","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","class","className","rows","id","onChange","dangerouslySetInnerHTML","__html","React","Component","MainApp","ReactDOM","render","document","getElementById"],"mappings":"+OAOAA,IAAOC,WAAW,CACdC,QAAQ,QAGNC,cACF,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAM,CACPC,cAAcC,EACdC,gBAAgBC,GAEpBX,EAAKY,kBAAoBZ,EAAKY,kBAAkBC,KAAvBZ,OAAAa,EAAA,EAAAb,CAAAD,IANXA,iFAkBAe,GACd,IAAIJ,EAAYhB,IAAOoB,EAAMC,OAAOC,MAAO,CAACC,UAAU,IACtDf,KAAKgB,SAAS,CACVX,cAAeO,EAAMC,OAAOC,MAC5BP,gBAAiBC,qCAKrB,OACIS,EAAAC,EAAAC,cAAA,OAAKC,MAAM,cACPH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eAAd,kBACAJ,EAAAC,EAAAC,cAAA,YAAUC,MAAM,eAAeE,KAAK,IAAIC,GAAG,SAAST,MAAOd,KAAKI,MAAMC,cAAemB,SAAUxB,KAAKS,qBAExGQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eAAd,UACAJ,EAAAC,EAAAC,cAAA,OAAKI,GAAG,UAAUF,UAAU,OAAOI,wBAAyB,CAACC,OAAQ1B,KAAKI,MAAMG,4BApCrEoB,IAAMC,WA0C/BtB,EAAW,8qCA+CbE,EAAYhB,IAAOc,EAAa,CAACS,UAAU,IACzCc,mLAEA,OACEZ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eAAd,sBACAJ,EAAAC,EAAAC,cAACxB,EAAD,cALYgC,IAAMC,WAW5BE,IAASC,OACLd,EAAAC,EAAAC,cAACU,EAAD,MACAG,SAASC,eAAe","file":"static/js/main.b0cf9748.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport marked from 'marked';\r\nimport './styles.sass';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n// ALLOWS LINE BREAKS WITH RETURN BUTTON\r\nmarked.setOptions({\r\n    breaks: true,\r\n  });\r\n\r\nclass Marked_Previewer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            rawMarkupText:placeholder,\r\n            markedPreviewer:rawMarkup\r\n        }\r\n        this.transformMarkdown = this.transformMarkdown.bind(this);\r\n    }\r\n    //componentDidMount() {\r\n    //    const script = document.createElement(\"script\");\r\n    \r\n    //    script.src =\r\n     //     \"https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js\";\r\n    //    script.async = true;\r\n    \r\n    //    document.body.appendChild(script);\r\n     // }\r\n\r\n    transformMarkdown(event){\r\n        var rawMarkup = marked(event.target.value, {sanitize: true});\r\n        this.setState({\r\n            rawMarkupText: event.target.value,\r\n            markedPreviewer: rawMarkup\r\n        })\r\n       // return { __html: rawMarkup };\r\n    }\r\n    render(){\r\n        return(\r\n            <div class=\"form-group\">\r\n                <div>\r\n                    <h3 className=\"text-center\">Enter Markdown</h3>\r\n                    <textarea class=\"form-control\" rows=\"5\" id=\"editor\" value={this.state.rawMarkupText} onChange={this.transformMarkdown}></textarea>\r\n                </div>                \r\n                <div>\r\n                    <h3 className=\"text-center\">Result</h3>\r\n                    <div id=\"preview\" className=\"well\" dangerouslySetInnerHTML={{__html: this.state.markedPreviewer}}></div>\r\n                </div>                \r\n            </div>           \r\n        )\r\n    }\r\n}\r\nconst placeholder = \r\n`# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n  \r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n  \r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.com), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | ------------- \r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbererd lists too.\r\n1. Use just 1s if you want! \r\n1. But the list goes on...\r\n- Even if you use dashes or asterisks.\r\n* And last but not least, let's not forget embedded images:\r\n\r\n![React Logo w/ Text](https://goo.gl/Umyytc)\r\n`\r\nvar rawMarkup = marked(placeholder, {sanitize: true});\r\nclass MainApp extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"container\">\r\n          <h1 className=\"text-center\">Markdown Previewer</h1>\r\n          <Marked_Previewer />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n//=================================\r\nReactDOM.render(\r\n    <MainApp />,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}